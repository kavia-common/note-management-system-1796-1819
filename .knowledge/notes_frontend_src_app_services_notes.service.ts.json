{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular service class 'NotesService' that provides CRUD operations for notes via a REST API. It uses HttpClient for HTTP requests and Observable return types for asynchronous data handling. The service interacts with a Note model, and the API URL is configured via environment variables.", "external_files": ["../models/note.model", "../../environments/environment", "@angular/core", "@angular/common/http", "rxjs"], "external_methods": ["HttpClient.get", "HttpClient.post", "HttpClient.put", "HttpClient.delete"], "published": ["NotesService"], "classes": [{"name": "NotesService", "description": "Angular service providing CRUD functions for notes leveraging HTTP requests to backend API."}], "methods": [{"name": "getNotes(): Observable<Note[]> { getNotes", "description": "Retrieves a list of all notes, ordered by update time.", "scope": "NotesService", "scopeKind": "class"}, {"name": "getNote(id: number): Observable<Note> { getNote", "description": "Fetches details for a specific note by its ID.", "scope": "NotesService", "scopeKind": "class"}, {"name": "createNote(note: Partial<Note>): Observable<Note> { createNote", "description": "Creates a new note with provided data.", "scope": "NotesService", "scopeKind": "class"}, {"name": "updateNote(id: number, note: Partial<Note>): Observable<Note> { updateNote", "description": "Updates an existing note identified by ID with new data.", "scope": "NotesService", "scopeKind": "class"}, {"name": "deleteNote(id: number): Observable<any> { deleteNote", "description": "Deletes a note specified by ID.", "scope": "NotesService", "scopeKind": "class"}, {"name": "constructor(public http: HttpClient) { constructor", "scope": "NotesService", "scopeKind": "class", "description": "unavailable"}], "calls": ["this.http.get<Note[]>(`${this.apiUrl}/notes`)", "this.http.get<Note>(`${this.apiUrl}/notes/${id}`)", "this.http.post<Note>(`${this.apiUrl}/notes`, note)", "this.http.put<Note>(`${this.apiUrl}/notes/${id}`, note)", "this.http.delete(`${this.apiUrl}/notes/${id}`)"], "search-terms": ["NotesService", "Angular", "CRUD", "REST API", "Note", "HttpClient", "Observable", "notes"], "state": 2, "file_id": 22, "knowledge_revision": 81, "git_revision": "", "revision_history": [{"48": ""}, {"71": ""}, {"76": ""}, {"81": ""}], "ctags": [{"_type": "tag", "name": "NotesService", "path": "/home/kavia/workspace/code-generation/note-management-system-1796-1819/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^export class NotesService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "apiUrl", "path": "/home/kavia/workspace/code-generation/note-management-system-1796-1819/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  private apiUrl: string = environment.apiUrl;$/", "language": "TypeScript", "kind": "property", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "constructor", "path": "/home/kavia/workspace/code-generation/note-management-system-1796-1819/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  constructor(public http: HttpClient) {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "createNote", "path": "/home/kavia/workspace/code-generation/note-management-system-1796-1819/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  createNote(note: Partial<Note>): Observable<Note> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "deleteNote", "path": "/home/kavia/workspace/code-generation/note-management-system-1796-1819/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  deleteNote(id: number): Observable<any> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "getNote", "path": "/home/kavia/workspace/code-generation/note-management-system-1796-1819/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  getNote(id: number): Observable<Note> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "getNotes", "path": "/home/kavia/workspace/code-generation/note-management-system-1796-1819/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  getNotes(): Observable<Note[]> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "http", "path": "/home/kavia/workspace/code-generation/note-management-system-1796-1819/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  constructor(public http: HttpClient) {$/", "language": "TypeScript", "kind": "property", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "updateNote", "path": "/home/kavia/workspace/code-generation/note-management-system-1796-1819/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  updateNote(id: number, note: Partial<Note>): Observable<Note> {$/", "language": "TypeScript", "kind": "method", "scope": "NotesService", "scopeKind": "class"}], "hash": "3aee3b71a46874bbafc7a267b1032feb", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/services/notes.service.ts", "fields": [{"name": "private apiUrl: string = environment.apiUrl;", "scope": "NotesService", "scopeKind": "class", "description": "unavailable"}, {"name": "constructor(public http: HttpClient) {", "scope": "NotesService", "scopeKind": "class", "description": "unavailable"}]}